server:
  port: 8082

spring:
  application:
    name: ORDER-SERVICE
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:3306/orderdb
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
  config:
#    import: configserver:http://localhost:9296 # hard coding the config server URL
    import: configserver:${CONFIG_SERVER_URL:http://localhost:9296}

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-43352435.okta.com/oauth2/default
      client:
        registration:
          internal-client:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oamrlvu77sB4c51K5d7
            client-secret: 6ZBrc_YAQYg1wSTXo2azBxSk6CmCY_ifft5nPkrdyyB68zrT8GMFZDI4ZO4BhNN3
        provider:
          okta:
            issuer-uri: https://dev-43352435.okta.com/oauth2/default

resilience4j:
  circuitbreaker:
    instances:
      external:
        event-consumer-buffer-size: 10
        failure-rate-threshold: 50
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 5s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        sliding-window-type: COUNT_BASED

microservices:
  product: http://product-service-svc/product/
  payment: http://payment-service-svc/payment/

#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    fetch-registry: true
#    register-with-eureka: true
#    service-url:
#      defaultZone: ${EUREKA_SERVER_ADDRESS:http://localhost:8761/eureka}
