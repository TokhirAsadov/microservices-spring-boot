server:
  port: 9090

spring:
  application:
    name: API-GATEWAY
  config:
#    import: configserver:http://${CONFIG_SERVER_URL:localhost}:9296  # hard coding the config server URL
    import: configserver:${CONFIG_SERVER_URL:http://localhost:9296} # In k8s, This is the URL of the config server that the gateway will use to get its configuration
  cloud:
    gateway:
      routes:
        - id : ORDER-SERVICE
#          uri: lb://ORDER-SERVICE
          uri: http://order-service-svc
          predicates:
            - Path=/order/**
          filters:
            - name: CircuitBreaker
              args:
                name: ORDER-SERVICE
                fallbackuri: forward:/orderServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: PAYMENT-SERVICE
#          uri: lb://PAYMENT-SERVICE
          uri: http://payment-service-svc
          predicates:
            - Path=/payment/**
          filters:
            - name: CircuitBreaker
              args:
                name: PAYMENT-SERVICE
                fallbackuri: forward:/paymentServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: PRODUCT-SERVICE
          uri: http://product-service-svc
          predicates:
            - Path=/product/**
          filters:
            - name: CircuitBreaker
              args:
                name: PRODUCT-SERVICE
                fallbackuri: forward:/productServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
  data:
    redis:
      host: redis
      port: 6379
#eureka:
#  client:
#    service-url:
#      defaultZone: ${EUREKA_SERVER_ADDRESS:http://localhost:8761/eureka}
#    register-with-eureka: false
#    fetch-registry: false


okta:
  oauth2:
    issuer: https://dev-43352435.okta.com/oauth2/default
    audience: api://default
    client-id: 0oamrlvu77sB4c51K5d7
    client-secret: 6ZBrc_YAQYg1wSTXo2azBxSk6CmCY_ifft5nPkrdyyB68zrT8GMFZDI4ZO4BhNN3
    scopes: openid, profile, email, offline_access